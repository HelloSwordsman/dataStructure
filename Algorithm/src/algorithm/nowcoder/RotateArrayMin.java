package algorithm.nowcoder;

public class RotateArrayMin {

	/**把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 
	 * 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。 
	 * 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 
	 * NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
	 * 时间限制：3秒
	 * @param args
	 */
	public static void main(String[] args) {
		Solution4 s = new Solution4();
		int[] array = {4950,4950,4952,4954,4955,4956,4956,4957,4957,4958,4959,4959,4960,4961,4962,4962,4963,4963,4963,4965,4967,4967,4967,4969,4970,4971,4971,4973,4976,4978,4979,4979,4980,4980,4982,4983,4984,4985,4986,4986,4987,4988,4988,4989,4989,4989,4990,4991,4993,4993,4997,4999,4999,5000,5000,5001,5001,5003,5005,5006,5006,5007,5007,5010,5012,5013,5013,5013,5014,5014,5016,5021,5021,5022,5022,5023,5023,5024,5024,5025,5027,5027,5028,5029,5031,5031,5033,5033,5033,5033,5034,5034,5038,5039,5039,5042,5043,5044,5045,5046,5050,5051,5053,5054,5056,5056,5059,5059,5060,5062,5062,5063,5064,5066,5070,5072,5073,5073,5076,5076,5079,5080,5082,5083,5085,5085,5085,5087,5088,5090,5090,5090,5091,5094,5095,5095,5096,5098,5099,5101,5105,5106,5108,5109,5110,5112,5118,5118,5122,5124,5128,5129,5129,5129,5132,5133,5135,5136,5137,5138,5138,5138,5138,5141,5142,5145,5146,5146,5148,5150,5150,5153,5155,5159,5159,5162,5163,5163,5166,5168,5168,5170,5170,5172,5175,5175,5176,5176,5178,5184,5184,5185,5186,5189,5190,5191,5191,5191,5192,5192,5192,5194};
		int min = s.minNumberInRotateArray(array);
		System.out.println(min);
	}

}


class Solution4 {
	public int minNumberInRotateArray(int [] array) {
        int min = array[0];
        for(int i=1;i<array.length;i++){
        	if(array[i]<=min){
        		return array[i];
        	}
        }
        return min;
    }
}